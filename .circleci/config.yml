version: 2

job_common: &job_common
  docker:
    - image: circleci/node:10.21-stretch
  working_directory: ~/argent-contracts
job_python: &job_python
  docker:
    - image: circleci/python:3.8.0b1-stretch-node
  working_directory: ~/argent-contracts
step_save_cache: &step_save_cache
  save_cache:
    paths:
      - ~/.cache/package-lock
    key: node-modules-{{ checksum "package-lock.json" }}
step_restore_cache: &step_restore_cache
  restore_cache:
    keys:
      - node-modules-{{ checksum "package-lock.json" }}
step_setup_global_packages: &step_setup_global_packages
  run:
    name: "Set up global packages"
    command: |
      npm install
step_pull_solc_docker: &step_pull_solc_docker
  run:
    name: "Pull solc docker images"
    command: |
      docker pull ethereum/solc:0.5.4
      docker pull ethereum/solc:0.6.12
step_setup_slither: &step_setup_slither
  run:
    name: "Setup slither analyser https://github.com/crytic/slither"
    command: |
      wget https://github.com/ethereum/solidity/releases/download/v0.5.4/solc-static-linux
      chmod +x solc-static-linux
      sudo mv solc-static-linux /usr/local/bin/solc
      sudo pip3 install slither-analyzer
jobs:
  unit-test:
    <<: *job_common
    steps:
      - checkout
      - <<: *step_restore_cache
      - setup_remote_docker:
          version: 19.03.13
      - <<: *step_pull_solc_docker
      - <<: *step_setup_global_packages
      - run:
          name: "Lint JavaScript"
          command: npm run lint:js
      - run:
          name: "Lint Solidity contracts"
          command: npm run lint:contracts
      - run:
          name: "Compiling external library contracts"
          command: npm run compile:lib
      - run:
          name: "Compiling legacy contracts"
          command: npm run compile:legacy
      - run:
          name: "Compiling contracts"
          command: npm run compile
      - run:
          name: "Compiling test contracts"
          command: npm run compile:test
      - run:
          name: "Provision lib artefacts"
          command: npm run provision:lib:artefacts
      - run:
          name: "Test deployment scripts"
          command: npm run ganache >/dev/null 2>&1 & npm run test:deployment
          no_output_timeout: 30m
      - run:
          name: "Running unit tests"
          command: npm run ganache >/dev/null 2>&1 & npm run test
      # Save coverage artifacts
      - store_artifacts:
          path: gas-usage-report.log
          destination: reports/gas-usage-report.log
      - run: npx codechecks
      - <<: *step_save_cache
      # Save coverage artifacts
      - store_artifacts:
          path: coverage
          destination: coverage-artifacts
  security-test:
    <<: *job_python
    steps:
      - checkout
      - <<: *step_restore_cache
      - setup_remote_docker:
          version: 19.03.13
      - <<: *step_pull_solc_docker
      - <<: *step_setup_global_packages
      - <<: *step_setup_slither
      - run:
          name: "Run slither"
          command: npm run security:slither
workflows:
  version: 2
  commit:
    jobs:
      - unit-test
  nightly:
    triggers:
      - schedule:
          cron: "0 1 * * *" # 1am UTC
          filters:
            branches:
              only:
                - develop
    jobs:
      - security-test
